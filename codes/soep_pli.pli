 /*      1         2         3         4         5         6         7*/--------
 /*4567890123456789012345678901234567890123456789012345678901234567890*/--------
 /* $Id: soep_pli.pli 1034 2018-07-15 16:15:10Z mueller $ */
 /*
 /* Copyright 2017-2018 by Walter F.J. Mueller <W.F.J.Mueller@gsi.de> */
 /*
 /* This program is free software; you may redistribute and/or modify */
 /* it under the terms of the GNU General Public License version 3.   */
 /* See Licence.txt in distribition directory for further details.    */
 /*                                                                   */
 /*  Revision History:                                                */
 /* Date         Rev Version  Comment                                 */
 /* 2018-07-11  1034   1.4    use stack allocated PRIME array; 10M OK */
 /* 2017-12-26   976   1.3    use CHAR(1) array; go for max PRIME size*/
 /* 2017-12-25   975   1.2    use sqrt(nmax) as outer loop end        */
 /* 2017-12-25   974   1.1    use 2-dim PRIME array                   */
 /* 2017-12-23   972   1.0.1  change (n-1)/2 --> n/2                  */
 /* 2017-09-17   951   1.0    Initial version                         */
 /* 2017-09-01   945   0.1    First draft                             */

  SOEP: PROC OPTIONS(MAIN) REORDER;
    DCL (NMAX,PRNT,IMAX)  BIN FIXED(31) INIT(0);
    DCL (NMSQRT,JMAX)     BIN FIXED(31) INIT(0);

    ON ENDFILE(SYSIN) BEGIN;
       PUT SKIP EDIT('Unexpected EOF, abort')(A);
       GOTO DONE;
    END;
    ON CONVERSION     BEGIN;
       PUT SKIP EDIT('Conversion error, abort')(A);
       GOTO DONE;
    END;
    
    GET EDIT(NMAX,PRNT) (F(10),F(10));

    /*IF NMAX < 10 | NMAX  > 10000000 THEN DO;*/
    IF NMAX  > 10000000 THEN DO;
      PUT SKIP EDIT('nmax out of range (10...10000000), abort') (A);
      GOTO DONE;
    END;

    NMSQRT = FLOOR(SQRT(NMAX));
    IMAX = (NMAX-1)/2;
    JMAX = IMAX/1024;

    CALL DOIT;
    DONE:;

    DOIT: PROC;
      DCL (I,J,N,IMIN)      BIN FIXED(31) INIT(0);
      DCL (NP,IL,NL)        BIN FIXED(31) INIT(0);
      /* In PL/I(F) V5.5 array bounds are BIN(15) ! limited to 32k !! */
      /* For static allocation is maximal aggregate size 2 MByte !!   */
      /* Use stack allocated array in helper proc to work around this */
      /* Go for a 2-dimensional array to work around index limit.     */
      /* Use 0 as lower bound to make index calculations easy:        */
      /*   PRIME(I) turns into PRIME(I/1024,MOD(I,1024))              */
      DCL PRIME(0:JMAX,0:1023)  CHAR(1);

      DO J=0 TO JMAX;
        DO I=0 TO 1023;
          PRIME(J,I) = '1';
        END;
      END;

      DO N=3 TO NMSQRT BY 2;
        I  = N/2;
        IF PRIME(I/1024,MOD(I,1024)) = '1' THEN DO;
          IMIN = N*N/2;
          DO I=IMIN TO IMAX BY N;
            PRIME(I/1024,MOD(I,1024)) = '0';
          END;
        END;
      END;

      IF PRNT > 0 THEN DO;
        PUT SKIP EDIT('List of Primes up to ',NMAX) (A,F(8));
        PUT SKIP EDIT(' ',2) (A,F(7));
        NP = 1;
        DO I=1 TO IMAX;
          IF PRIME(I/1024,MOD(I,1024)) = '1' THEN DO;
            PUT EDIT(' ',1+2*I) (A,F(7));
            NP = NP + 1;
            IF NP = 10 THEN DO;
              PUT SKIP;
              NP = 0;
            END;
          END;
        END;
        IF NP > 0 THEN PUT SKIP;
      END;
  
      IL =  4;
      NL = 10;
      NP =  1;
      DO I=1 TO IMAX;
        IF PRIME(I/1024,MOD(I,1024)) = '1' THEN NP = NP + 1;
        IF I = IL THEN DO;
          NL = 2*IL + 2;
          PUT SKIP EDIT('pi(',NL,'): ',NP) (A,F(9),A,F(8));
          IL = 10*(IL+1)-1;
        END;
      END;
  
      IF NL < NMAX THEN PUT SKIP EDIT('pi(',NMAX,'): ',NP)
                                     (A,F(9),A,F(8));
    
    END DOIT;
  END SOEP;
